/** A workload uses this API to retrieve a list of identities that
it should be allowed to represent itself as (SPIFFE IDs) as well as,
optionally, documents (in the form of SPIFFE Verifiable Identity
Documents(SVID) ) that can be used to prove those identities to other
systems.

Finally, the API can also be used to retrieve trust bundles that can be
used to verify SVIDs from other SPIFFE-identified workloads. */

syntax = "proto3";
package spire.api.workload;
option go_package = "workload";

// The Bundles message carries a group of workload SVIDs and their
// associated information. It also carries a TTL to inform the workload
// when it should check back next.
message Bundles {
    repeated WorkloadEntry bundles = 1;
    int32 ttl = 2;
}

// The WorkloadEntry message carries a single SVID and all associated
// information, including CA bundles. All `bytes` types are ASN.1 DER encoded
message WorkloadEntry {
    // The SPIFFE ID of the SVID in this entry
    string spiffe_id = 1;

    // The SVID itself
    bytes svid = 2;

    // The SVID private key
    bytes svid_private_key = 3;

    // CA certificates belonging to the SVID
    bytes svid_bundle = 4;

    // CA certificates that the workload should trust, mapped
    // by the trust domain of the external authority
    map<string, bytes> federated_bundles = 5;
}

// The SpiffeID message carries only a SPIFFE ID
message SpiffeID {
    string id = 1;
}

// Represents a message with no fields
message Empty {  }

service Workload {
    // Fetch bundles for the SVID with the given SPIFFE ID
    rpc FetchBundles(SpiffeID) returns (Bundles);

    // Fetch all bundles the workload is entitled to
    rpc FetchAllBundles(Empty) returns (Bundles);
}
